{"version":3,"file":"destructuring.js","sources":["/Users/azu/Dropbox/workspace/toybox/es6features-playground/src/destructuring.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACT,CAAJ,EAAI,CAAA,MAAM,EAAG,CAAA,OAAO,CAAC,cAAc,CAAC,CAAC;AACrC,CAAA,OAAQ,CAAC,eAAe;CACpB,SAAS,WAAU,CAAC,CAAE;CAClB,SAAO;AACH,CAAA,OAAE,CAAE,gBAAe;AACnB,CAAA,UAAK,CAAE,EACH,EAAE,CAAE,gBAAe,CACtB;AACD,CAAA,UAAK,CAAE,EACH,EAAE,CAAE,gBAAe,CACtB;CAAA,IACJ,CAAC;GACL;AAED,CAFC,GAEC,CAAC,eAAe;CACd,aAAe,EAAC,CAAC,CAAE,EAAC,CAAE,EAAC,CAAC;CAAnB,QAAC;CAAI,QAAC,WAAc;AACzB,CAAA,SAAM,CAAC,CAAC,IAAK,EAAC,CAAC,CAAC;AAChB,CAAA,SAAM,CAAC,CAAC,IAAK,EAAC,CAAC,CAAC;KAClB,CAAC;AACH,CAAA,GAAE,CAAC,iBAAiB;CAChB,aACM,CAAA,UAAU,EAAE;CADR,QAAC;CAAa,QAAC;CAAS,QAAC,YAChB;AACf,CAAJ,MAAI,CAAA,GAAG,EAAG,CAAA,UAAU,EAAE,CAAC;AACvB,CAAA,SAAM,UAAU,CAAC,CAAC,CAAE,CAAA,GAAG,GAAG,CAAC,CAAC;AAC5B,CAAA,SAAM,UAAU,CAAC,CAAC,CAAE,CAAA,GAAG,IAAI,GAAG,CAAC,CAAC;AAChC,CAAA,SAAM,UAAU,CAAC,CAAC,CAAE,CAAA,GAAG,IAAI,CAAC,CAAC;KAC/B,CAAC;AACH,CAAA,GAAE,CAAC,2BAA2B;CAC1B,aAAqB,CAAA,UAAU,EAAE;;;uBAAC;AAC9B,CAAJ,MAAI,CAAA,GAAG,EAAG,CAAA,UAAU,EAAE,CAAC;AACvB,CAAA,SAAM,UAAU,CAAC,EAAE,CAAE,CAAA,GAAG,GAAG,CAAC,CAAC;AAC7B,CAAA,SAAM,UAAU,CAAC,GAAG,CAAE,CAAA,GAAG,IAAI,CAAC,CAAC;AAC/B,CAAA,SAAM,UAAU,CAAC,GAAG,CAAE,CAAA,GAAG,IAAI,CAAC,CAAC;KACjC,CAAC;AACH,CAAA,GAAE,CAAC,oCAAoC;CACnC,WAAS,EAAC,CAAC,IAAS,CAAE;SAAJ,EAAC;AACf,CAAA,WAAM,CAAC,CAAC,IAAK,EAAC,CAAC,CAAC;KACnB;AACD,CADC,IACA,CAAC,CAAC,IAAI,CAAE,EAAC,CAAC,CAAC,CAAA;KACd,CAAC;AACH,CAAA,GAAE,CAAC,yBAAyB;CACxB,MAAK,EAAC,EAAI,GAAE,IAAC;AACb,CAAA,SAAM,CAAC,CAAC,IAAK,UAAS,CAAC,CAAC;KAC1B,CAAC;GACL,CAAC","sourcesContent":["\"use strict\";\nvar assert = require(\"power-assert\");\ndescribe(\"Destructuring\", ()=> {\n    function getASTNode() {\n        return {\n            op: \"1st operation\",\n            \"lhs\": {\n                op: \"lhs operation\"\n            },\n            \"rhs\": {\n                op: \"rhs operation\"\n            }\n        };\n    }\n\n    it(\"list matching\", ()=> {\n        var [a, , b] = [1, 2, 3];\n        assert(a === 1);\n        assert(b === 3);\n    });\n    it(\"object matching\", ()=> {\n        var { op: a, lhs: { op: b }, rhs: c }\n            = getASTNode();\n        var ast = getASTNode();\n        assert.deepEqual(a, ast.op);\n        assert.deepEqual(b, ast.lhs.op);\n        assert.deepEqual(c, ast.rhs);\n    });\n    it(\"object matching shorthand\", ()=> {\n        var {op, lhs, rhs} = getASTNode();\n        var ast = getASTNode();\n        assert.deepEqual(op, ast.op);\n        assert.deepEqual(lhs, ast.lhs);\n        assert.deepEqual(rhs, ast.rhs);\n    });\n    it(\" Can be used in parameter position\", ()=> {\n        function g({name: x}) {\n            assert(x === 5);\n        }\n        g({name: 5})\n    });\n    it(\"Fail-soft destructuring\", ()=> {\n        var [a] = [];\n        assert(a === undefined);\n    });\n});"]}