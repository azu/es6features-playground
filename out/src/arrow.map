{"version":3,"file":"arrow.js","sources":["/Users/azu/Dropbox/workspace/toybox/es6features-playground/src/arrow.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACT,CAAJ,EAAI,CAAA,MAAM,EAAG,CAAA,OAAO,CAAC,cAAc,CAAC,CAAC;AACjC,CAAJ,EAAI,CAAA,KAAK,EAAG,CAAA,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,CAAA,OAAQ,CAAC,eAAe;AACpB,CAAA,SAAQ,CAAC,mBAAmB;AACpB,CAAJ,MAAI,CAAA,KAAK,EAAG,EAAC,CAAC,CAAE,EAAC,CAAE,EAAC,CAAC,CAAC;AACtB,CAAA,KAAE,CAAC,WAAW;AACN,CAAJ,QAAI,CAAA,IAAI,EAAG,CAAA,KAAK,IAAI,WAAC,CAAC;cAAI,CAAA,CAAC,EAAG,EAAC;SAAC,CAAC;AACjC,CAAA,WAAM,UAAU,CAAC,IAAI,CAAE,EAAC,CAAC,CAAE,EAAC,CAAE,EAAC,CAAC,CAAC,CAAC;OACpC,CAAC;AACH,CAAA,KAAE,CAAC,eAAe;AACV,CAAJ,QAAI,CAAA,IAAI,EAAG,CAAA,KAAK,IAAI,WAAE,CAAC,CAAE,CAAA,CAAC;cAAK,CAAA,CAAC,EAAG,EAAC;SAAC,CAAC;AACtC,CAAA,WAAM,UAAU,CAAC,IAAI,CAAE,EAAC,CAAC,CAAE,CAAA,CAAC,EAAG,EAAC,CAAE,CAAA,CAAC,EAAG,EAAC,CAAC,CAAC,CAAC;OAC5C,CAAC;KACL,CAAC;AACH,CAAA,SAAQ,CAAC,kBAAkB;AACnB,CAAJ,MAAI,CAAA,IAAI,EAAG,EAAC,CAAC,CAAE,EAAC,CAAE,EAAC,CAAE,GAAE,CAAE,GAAE,CAAE,GAAE,CAAC,CAAC;AACjC,CAAA,KAAE,CAAC,WAAW;AACN,CAAJ,QAAI,CAAA,KAAK,EAAG,GAAE,CAAC;AACf,CAAA,SAAI,QAAQ,WAAC,CAAC,CAAI;CACd,WAAI,CAAC,EAAG,EAAC,CAAA,GAAK,EAAC,CAAE;AACb,CAAA,cAAK,KAAK,CAAC,CAAC,CAAC,CAAC;SACjB;CAAA,MACJ,EAAC,CAAC;AACH,CAAA,WAAM,UAAU,CAAC,KAAK,CAAE,EAAC,CAAC,CAAE,GAAE,CAAE,GAAE,CAAC,CAAC,CAAC;OACvC,CAAC;KACL,CAAC;AACH,CAAA,SAAQ,CAAC,cAAc;AACf,CAAJ,MAAI,CAAA,IAAI,CAAC;AACT,CAAA,aAAU,YAAM;AACZ,CAAA,SAAI,EAAG,CAAA,KAAK,IAAI,CAAC,OAAO,CAAE,MAAK,CAAC,CAAC;KACpC,EAAC,CAAC;AACH,CAAA,YAAS,YAAM;AACX,CAAA,SAAI,QAAQ,EAAE,CAAC;KAClB,EAAC,CAAC;AACH,CAAA,KAAE,CAAC,kBAAkB;AACb,CAAJ,QAAI,CAAA,GAAG,EAAG;AACN,CAAA,YAAK,CAAE,MAAK;AACZ,CAAA,eAAQ,CAAE,EAAC,OAAO,CAAE,QAAO,CAAC;CAC5B,mBAAY,CAAZ,UAAa;;AACT,CAAA,aAAI,SAAS,QAAQ,WAAC,CAAC;kBACnB,CAAA,OAAO,IAAI,CAAC,UAAU,EAAG,UAAS,CAAA,CAAG,EAAC,CAAC;aAAC,CAAC;SAChD;OACJ,CAAC;AACF,CAAA,QAAG,aAAa,EAAE,CAAC;AAEnB,CAAA,UAAK,OAAO,YAAY,CAAC,IAAI,CAAC,CAAC;AAC/B,CAAA,WAAM,CAAC,KAAK,KAAK,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;OAC9C,CAAC;KACL,CAAC;GACL,CAAC","sourcesContent":["\"use strict\";\nvar assert = require(\"power-assert\");\nvar sinon = require(\"sinon\");\ndescribe(\"ArrowFunction\", ()=> {\n    describe(\"Expression bodies\", ()=> {\n        var evens = [2, 4, 6];\n        it(\"evens + 1\", ()=> {\n            var odds = evens.map(v => v + 1);\n            assert.deepEqual(odds, [3, 5, 7]);\n        });\n        it(\"evens + index\", ()=> {\n            var nums = evens.map((v, i) => v + i);\n            assert.deepEqual(nums, [2, 4 + 1, 6 + 2]);\n        });\n    });\n    describe(\"Statement bodies\", ()=> {\n        var nums = [1, 5, 8, 10, 12, 15];\n        it(\"nums push\", ()=> {\n            var fives = [];\n            nums.forEach(v => {\n                if (v % 5 === 0) {\n                    fives.push(v);\n                }\n            });\n            assert.deepEqual(fives, [5, 10, 15]);\n        });\n    });\n    describe(\"Lexical this\", ()=> {\n        var stub;\n        beforeEach(()=> {\n            stub = sinon.spy(console, \"log\");\n        });\n        afterEach(()=> {\n            stub.restore();\n        });\n        it(\"has lexical this\", ()=> {\n            var bob = {\n                _name: \"Bob\",\n                _friends: [\"Jorge\", \"Smith\"],\n                printFriends() {\n                    this._friends.forEach(f =>\n                        console.log(this._name + \" knows \" + f));\n                }\n            };\n            bob.printFriends();\n\n            sinon.assert.calledTwice(stub);\n            assert(/Bob/.test(stub.getCall(1).args[0]));\n        });\n    });\n});\n"]}