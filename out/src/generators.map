{"version":3,"file":"generators.js","sources":["/Users/azu/Dropbox/workspace/toybox/es6features-playground/src/generators.js","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"AAAI,GAAA,CAAA,MAAM,EAAG,CAAA,OAAO,CAAC,cAAc,CAAC,CAAC;AACjC,CAAJ,EAAI,CAAA,KAAK,EAAG,CAAA,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,CAAA,OAAQ,CAAC,YAAY;AACb,CAAJ,IAAI,CAAA,IAAI,CAAC;AACT,CAAA,WAAU,YAAM;AACZ,CAAA,OAAI,EAAG,CAAA,KAAK,KAAK,CAAC,OAAO,CAAE,MAAK,CAAC,CAAC;GACrC,EAAC,CAAC;AACH,CAAA,UAAS,YAAM;AACX,CAAA,OAAI,QAAQ,EAAE,CAAC;GAClB,EAAC,CAAC;AACH,CAAA,GAAE,CAAC,aAAa;AACR,CAAJ,MAAI,CAAA,SAAS,EAAG,GACf,CAAC;ACZV,CDaQ,kBCbO,YAAY,CDanB,SAAS,CAAC,CAAA,MAAM,SAAS,WAAc;;;;CEb/C,WAAO,CCAP,eAAe,cAAc,ADAL,CEAxB,SAAS,IAAI,CAAE;CACT,cAAO,IAAI;;;mBJaK,EAAC,OAAQ,EAAC;;;;oBAEL,IAAG;AACd,CAAA,gBAAG,EAAG,IAAG,CAAC;AACV,CAAA,gBAAG,GAAI,KAAI,CAAC;;;;;CKlB5B,mBLmBsB,IAAG,CKnBD;;ACAxB,CAAA,iBAAI,WAAW,EAAE,CAAA;;;;CCAjB,mBAAO,CAAA,IAAI,IAAI,EAAE,CAAA;;CHCmB,MAC/B,CFAO,KAAI,CAAC,CAAC;MDD6B,CDoBrC;CQpBF,QAAS,GAAA,OACA,CRqBK,SAAS,CSvBb,eAAe,WAAW,CDET,MAAM,SAAS,CCFa,CDEZ,ACFa,EDEX;CACpC,WAAiB,CACrB,EAAC,CAAC,MAAoB,CAAA,SAAsB,EAAE,CAAC,KAAK,GAAI;SRmBpD,EAAC;CAAe;CAErB,WAAI,CAAC,EAAG,KAAI,CAAE;CACV,eAAM;SACT;AACD,CADC,cACM,IAAI,CAAC,CAAC,CAAC,CAAC;OAClB;KQtBA;ARuBD,CQvBC,SRuBK,CAAC,IAAI,OAAO,CAAC,CAAC;KACtB,CAAC;GACL,CAAC","sourcesContent":["var assert = require(\"power-assert\");\nvar sinon = require(\"sinon\");\ndescribe(\"Generators\", ()=> {\n    var stub;\n    beforeEach(()=> {\n        stub = sinon.stub(console, \"log\");\n    });\n    afterEach(()=> {\n        stub.restore();\n    });\n    it(\"should call\", ()=> {\n        var fibonacci = {\n        };\n        fibonacci[Symbol.iterator] = function*() {\n            var pre = 0, cur = 1;\n            for (; ;) {\n                var temp = pre;\n                pre = cur;\n                cur += temp;\n                yield cur;\n            }\n        };\n\n        for (var n of fibonacci) {\n            // truncate the sequence at 1000\n            if (n > 1000) {\n                break;\n            }\n            console.log(n);\n        }\n        assert(stub.called);\n    });\n});\n","$traceurRuntime.setProperty($__placeholder__0,\n          $__placeholder__1, $__placeholder__2)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","return $__placeholder__0","$ctx.maybeThrow()","return $ctx.end()","\n        for (var $__placeholder__0 =\n                 $__placeholder__1[Symbol.iterator](),\n                 $__placeholder__2;\n             !($__placeholder__3 = $__placeholder__4.next()).done; ) {\n          $__placeholder__5;\n          $__placeholder__6;\n        }","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]"]}